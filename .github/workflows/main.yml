name: Build & Deploy NestJS API
on:
  push:
    branches: [develop] # Update to only trigger on the develop branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '21'

      - name: Install dependencies
        run: npm install

      - name: Build the project
        run: npm run build

      - name: Deploy NestJS API
        uses: appleboy/ssh-action@v0.1.2
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          debug: true
          script: |
            # Disable host key checking for this script execution
            export GIT_SSH_COMMAND="ssh -o StrictHostKeyChecking=no"
            # Create the project directory if it doesn't exist
            mkdir -p ~/tasks-api
            # Ensure the directory i s empty
            rm -rf ~/tasks-api/*
            # Navigate to the project directory
            cd ~/tasks-api
            # Pull the latest code from the repository
            if [ -d ".git" ]; then
              git pull origin develop
            else
              git clone --branch develop git@github.com:esinniobiwaquareeb/tasks-api.git .
            fi
            # Check if Node.js is installed, if not install it
            if ! command -v node &> /dev/null; then
              curl -sL https://deb.nodesource.com/setup_21.x | sudo -E bash -
              sudo apt-get install -y nodejs
            fi
            # Check if npm is installed, if not install it
            if ! command -v npm &> /dev/null; then
              sudo apt-get install -y npm
            fi
            # Check if pm2 is installed, if not install it
            if ! command -v pm2 &> /dev/null; then
              sudo npm install -g pm2
            fi
            # Install dependencies on the remote server
            npm install
            # Build the project on the remote server
            npm run build
            # Start the NestJS app using pm2, restart if it already exists
            if pm2 list | grep -q "tasks-api"; then
              pm2 restart tasks-api
            else
              pm2 start dist/main.js --name "tasks-api"
            fi
            # Save the pm2 process list and corresponding environments
            pm2 save
            echo 'Deployment successful to Digital Ocean Droplet'
